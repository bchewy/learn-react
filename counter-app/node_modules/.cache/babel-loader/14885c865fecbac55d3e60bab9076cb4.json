{"ast":null,"code":"import _classCallCheck from \"/Users/brianchew/Desktop/Projects/React/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianchew/Desktop/Projects/React/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianchew/Desktop/Projects/React/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianchew/Desktop/Projects/React/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianchew/Desktop/Projects/React/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianchew/Desktop/Projects/React/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      imageUrl: \"https://picsum.photos/200\",\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n    _this.styles = {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// React.Fragment because jsx notation is converted to\n        // React.CreateElement() and only takes in one element\n        React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container-fluid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: this.state.imageUrl,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: this.styles,\n          className: this.getBadgeClasses(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, this.formatCount()), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn btn-secondary btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Increase\"), this.state.tags.length === 0 && \"Please create a new tag!\", this.renderTags()))\n      );\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count; //Picking the count property from state object\n\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/brianchew/Desktop/Projects/React/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","imageUrl","tags","styles","fontSize","fontWeight","length","map","tag","getBadgeClasses","formatCount","renderTags","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE,2BAFJ;AAGNC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAHA,K;UAQRC,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,K;;;;;;iCAKI;AACX,UAAI,KAAKN,KAAL,CAAWG,IAAX,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AAElC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWG,IAAX,CAAgBK,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CADF;AAOD;;;6BAEQ;AACP,aACE;AACA;AACA,4BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAE,KAAKT,KAAL,CAAWE,QAA3C;AAAqD,UAAA,GAAG,EAAC,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAM,UAAA,KAAK,EAAE,KAAKE,MAAlB;AAA0B,UAAA,SAAS,EAAE,KAAKM,eAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKC,WAAL,EADH,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE;AAAQ,UAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,EASG,KAAKX,KAAL,CAAWG,IAAX,CAAgBI,MAAhB,KAA2B,CAA3B,IAAgC,0BATnC,EAUG,KAAKK,UAAL,EAVH,CADF;AAHF;AAkBD;;;sCAEiB;AAChB,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOY,OAAP;AACD;;;kCAEa;AAAA,UACJZ,KADI,GACM,KAAKD,KADX,CACJC,KADI,EACkB;;AAC9B,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EAxDmBH,S;;AA2DtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    imageUrl: \"https://picsum.photos/200\",\n    tags: [\"tag1\", \"tag2\", \"tag3\"]\n  };\n\n  // Apply styles this way\n  // Call it with style={this.styles }\n  styles = {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      // React.Fragment because jsx notation is converted to\n      // React.CreateElement() and only takes in one element\n      <React.Fragment>\n        <div className=\"container-fluid\">\n          <img className=\"img-fluid\" src={this.state.imageUrl} alt=\"\" />\n          <br />\n          <span style={this.styles} className={this.getBadgeClasses()}>\n            {this.formatCount()}\n          </span>\n          <br />\n          <button className=\"btn btn-secondary btn-sm\">Increase</button>\n          {/* Conditionals in JSX */}\n          {this.state.tags.length === 0 && \"Please create a new tag!\"}\n          {this.renderTags()}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state; //Picking the count property from state object\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}