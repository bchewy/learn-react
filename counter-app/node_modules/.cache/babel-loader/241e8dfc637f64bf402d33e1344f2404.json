{"ast":null,"code":"import _classCallCheck from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.styles = {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    };\n\n    _this.handleDecrement = function () {\n      _this.setState({\n        value: _this.state.value - 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, tag);\n      }));\n    } // //Arrow function syntax fix 'this' binding event handler's problem\n    // handleIncrement = () => {\n    //   console.log(\"Increment Clicked\", this);\n    //   //this.state.count++; // -- Do not modify state like this directly\n    //   // Why not? --React does not call render() method and view is not method\n    //   // Tells react that state of component is going to change\n    //   // and thus render() method will be\n    //   this.setState({ value: this.state.value + 1 });\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"props\", this.props);\n      return (// React.Fragment because jsx notation is converted to\n        // React.CreateElement() and only takes in one element\n        //{this.props.children} //to pass children from another component\n        React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, this.props.id), React.createElement(\"div\", {\n          className: \"container-fluid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: this.state.imageUrl,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: this.styles,\n          className: this.getBadgeClasses(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, this.formatCount()), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.onIncrement(_this2.props.counter.id);\n          },\n          className: \"btn btn-primary btn-sm mr-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Increase\"), React.createElement(\"button\", {\n          onClick: this.handleDecrement,\n          className: \"btn btn-danger btn-sm ml-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Decrease\"), this.state.tags.length === 0 && \"Please create a new tag!\", this.renderTags()), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.onDelete(_this2.props.countner.id);\n          },\n          className: \"btn btn-danger btn-sm m-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Delete\"))\n      );\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.props.counter.value; //Picking the count property from state object\n\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","styles","fontSize","fontWeight","handleDecrement","setState","value","state","tags","length","map","tag","console","log","props","id","imageUrl","getBadgeClasses","formatCount","onIncrement","counter","renderTags","onDelete","countner","classes","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  // state = {\n  //   value: this.props.counter.value, //set to props value that is setting from outside\n  //   imageUrl: \"https://picsum.photos/200\",\n  //   tags: [\"tag1\", \"tag2\", \"tag3\"]\n  // };\n\n  // constructor() {\n  //   super();\n  //   console.log(\"Constructor\", this); //Shows this\n  //   //Sets this for handleincrement to this counter class (bind)\n  //   this.handleIncrement = this.handleIncrement.bind(this);\n  // }\n\n  // Apply styles this way\n  // Call it with style={this.styles }\n  styles = {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  // //Arrow function syntax fix 'this' binding event handler's problem\n  // handleIncrement = () => {\n  //   console.log(\"Increment Clicked\", this);\n  //   //this.state.count++; // -- Do not modify state like this directly\n  //   // Why not? --React does not call render() method and view is not method\n\n  //   // Tells react that state of component is going to change\n  //   // and thus render() method will be\n  //   this.setState({ value: this.state.value + 1 });\n  // };\n\n  handleDecrement = () => {\n    this.setState({ value: this.state.value - 1 });\n  };\n\n  render() {\n    console.log(\"props\", this.props);\n    return (\n      // React.Fragment because jsx notation is converted to\n      // React.CreateElement() and only takes in one element\n      //{this.props.children} //to pass children from another component\n\n      <React.Fragment>\n        <h4>{this.props.id}</h4>\n        <div className=\"container-fluid\">\n          <img className=\"img-fluid\" src={this.state.imageUrl} alt=\"\" />\n          <br />\n          <span style={this.styles} className={this.getBadgeClasses()}>\n            {this.formatCount()}\n          </span>\n          <br />\n          <button\n            onClick={() => this.props.onIncrement(this.props.counter.id)}\n            className=\"btn btn-primary btn-sm mr-2\"\n          >\n            Increase\n          </button>\n          <button\n            onClick={this.handleDecrement}\n            className=\"btn btn-danger btn-sm ml-2\"\n          >\n            Decrease\n          </button>\n          {/* Conditionals in JSX */}\n          {this.state.tags.length === 0 && \"Please create a new tag!\"}\n          {this.renderTags()}\n        </div>\n        <button\n          onClick={() => this.props.onDelete(this.props.countner.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value: count } = this.props.counter; //Picking the count property from state object\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}