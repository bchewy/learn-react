{"ast":null,"code":"import _classCallCheck from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }] //component that owns the state should be the one owning it\n      //modifying counters eg adding/deleting should be done here\n\n    };\n\n    _this.handleDelete = function (counterId) {\n      console.log(\"Event handler called\", counterId);\n\n      var counters = _this.state.counters.filter(function (c) {\n        return c.id !== counterId;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    //local state is invisible to other components\n    //props is read-only, only within the same component\n    //otherwise, you can take input(prop value) and bring it into the state\n    //key is used internally by react\n    //hence we parse id as a prop and read by id\n    //key and id are seperate props\n    //in the future --> need to parse in values from counter object as props again\n    //to fix this we parse in the entire counter object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.state.counters.map(function (counter) {\n        return React.createElement(Counter, {\n          key: counter.id,\n          onDelete: _this2.handleDelete,\n          counter: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Counter #\", counter.id));\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n\nexport default Counters;","map":{"version":3,"sources":["/Users/brianchew/Desktop/Projects/Web Development/React/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","counterId","console","log","filter","c","setState","map","counter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ,CADJ,CAON;AACA;;AARM,K;;UAWRC,Y,GAAe,UAAAC,SAAS,EAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,SAApC;;AACA,UAAMJ,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBO,MAApB,CAA2B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACP,EAAF,KAASG,SAAb;AAAA,OAA5B,CAAjB;;AACA,YAAKK,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;;;;;;AACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;6BACS;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwB,UAAAC,OAAO;AAAA,eAC9B,oBAAC,OAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACV,EADf;AAEE,UAAA,QAAQ,EAAE,MAAI,CAACE,YAFjB;AAGE,UAAA,OAAO,EAAEQ,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAcA,OAAO,CAACV,EAAtB,CALF,CAD8B;AAAA,OAA/B,CADH,CADF;AAaD;;;;EAxCoBL,S;;AA2CvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 }\n    ]\n    //component that owns the state should be the one owning it\n    //modifying counters eg adding/deleting should be done here\n  };\n\n  handleDelete = counterId => {\n    console.log(\"Event handler called\", counterId);\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n  //local state is invisible to other components\n  //props is read-only, only within the same component\n  //otherwise, you can take input(prop value) and bring it into the state\n\n  //key is used internally by react\n  //hence we parse id as a prop and read by id\n  //key and id are seperate props\n  //in the future --> need to parse in values from counter object as props again\n  //to fix this we parse in the entire counter object\n  render() {\n    return (\n      <div>\n        {this.state.counters.map(counter => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            counter={counter}\n          >\n            <h3>Counter #{counter.id}</h3>\n          </Counter>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}